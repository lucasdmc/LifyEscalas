{"ast":null,"code":"var _jsxFileName = \"/Users/lucascantoni/Desktop/LifyEscalas/LifyEscalas/src/components/Registration/ProfessionalRegistration.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ProfessionalRegistration.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfessionalRegistration = ({\n  onSave,\n  onCancel,\n  professional\n}) => {\n  _s();\n  var _professional$isActiv;\n  const [formData, setFormData] = useState({\n    name: (professional === null || professional === void 0 ? void 0 : professional.name) || '',\n    profession: (professional === null || professional === void 0 ? void 0 : professional.profession) || '',\n    professionalRegistration: (professional === null || professional === void 0 ? void 0 : professional.professionalRegistration) || '',\n    email: (professional === null || professional === void 0 ? void 0 : professional.email) || '',\n    phone: (professional === null || professional === void 0 ? void 0 : professional.phone) || '',\n    locations: (professional === null || professional === void 0 ? void 0 : professional.locations) || [],\n    groups: (professional === null || professional === void 0 ? void 0 : professional.groups) || [],\n    isActive: (_professional$isActiv = professional === null || professional === void 0 ? void 0 : professional.isActive) !== null && _professional$isActiv !== void 0 ? _professional$isActiv : true\n  });\n  const [errors, setErrors] = useState({});\n\n  // Dados mockados para demonstração\n  const availableLocations = [{\n    id: '1',\n    name: 'Hospital 1° de Maio'\n  }, {\n    id: '2',\n    name: 'Hospital Estadual Pedro Mendes'\n  }, {\n    id: '3',\n    name: 'Hospital da 2ª Divisão'\n  }, {\n    id: '4',\n    name: 'Pronto Atendimento Aeroporto CGH'\n  }, {\n    id: '5',\n    name: 'UPA de Ilha Bela'\n  }];\n  const availableGroups = [{\n    id: '1',\n    name: 'Coordenação'\n  }, {\n    id: '2',\n    name: 'Pediatria'\n  }, {\n    id: '3',\n    name: 'Clínica Médica'\n  }, {\n    id: '4',\n    name: 'UTI'\n  }, {\n    id: '5',\n    name: 'Emergência'\n  }];\n  const professions = ['Médico(a)', 'Dentista', 'Enfermeiro(a)', 'Técnico(a) de Enfermagem', 'Fisioterapeuta', 'Psicólogo(a)', 'Outros'];\n  const handleInputChange = (field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n\n    // Limpar erro quando o usuário começar a digitar\n    if (errors[field]) {\n      setErrors(prev => ({\n        ...prev,\n        [field]: undefined\n      }));\n    }\n  };\n  const handleLocationToggle = locationId => {\n    setFormData(prev => ({\n      ...prev,\n      locations: prev.locations.includes(locationId) ? prev.locations.filter(id => id !== locationId) : [...prev.locations, locationId]\n    }));\n  };\n  const handleGroupToggle = groupId => {\n    setFormData(prev => ({\n      ...prev,\n      groups: prev.groups.includes(groupId) ? prev.groups.filter(id => id !== groupId) : [...prev.groups, groupId]\n    }));\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.name.trim()) {\n      newErrors.name = 'Nome do profissional é obrigatório';\n    }\n    if (!formData.profession.trim()) {\n      newErrors.profession = 'Profissão é obrigatória';\n    }\n    if (!formData.professionalRegistration.trim()) {\n      newErrors.professionalRegistration = 'Registro profissional é obrigatório';\n    }\n    if (!formData.email.trim()) {\n      newErrors.email = 'E-mail é obrigatório';\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\n      newErrors.email = 'E-mail inválido';\n    }\n    if (!formData.phone.trim()) {\n      newErrors.phone = 'Telefone é obrigatório';\n    }\n    if (formData.locations.length === 0) {\n      newErrors.locations = 'Selecione pelo menos um local';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validateForm()) {\n      onSave(formData);\n    }\n  };\n  const formatPhone = value => {\n    const numbers = value.replace(/\\D/g, '');\n    if (numbers.length <= 10) {\n      return numbers.replace(/^(\\d{2})(\\d{4})(\\d{4})$/, '($1) $2-$3');\n    } else {\n      return numbers.replace(/^(\\d{2})(\\d{5})(\\d{4})$/, '($1) $2-$3');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"professional-registration\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"registration-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"registration-title\",\n        children: professional ? 'Editar Profissional' : 'Cadastrar Novo Profissional'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"registration-subtitle\",\n        children: professional ? 'Atualize as informações do profissional' : 'Adicione um novo profissional ao sistema'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"registration-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"section-title\",\n          children: \"Informa\\xE7\\xF5es Pessoais\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              className: \"form-label\",\n              children: \"Nome Completo *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"name\",\n              className: `form-input ${errors.name ? 'error' : ''}`,\n              value: formData.name,\n              onChange: e => handleInputChange('name', e.target.value),\n              placeholder: \"Digite o nome completo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), errors.name && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"profession\",\n              className: \"form-label\",\n              children: \"Profiss\\xE3o *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"profession\",\n              className: `form-input ${errors.profession ? 'error' : ''}`,\n              value: formData.profession,\n              onChange: e => handleInputChange('profession', e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Selecione a profiss\\xE3o\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this), professions.map(prof => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: prof,\n                children: prof\n              }, prof, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), errors.profession && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: errors.profession\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"professionalRegistration\",\n              className: \"form-label\",\n              children: \"Registro Profissional *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"professionalRegistration\",\n              className: `form-input ${errors.professionalRegistration ? 'error' : ''}`,\n              value: formData.professionalRegistration,\n              onChange: e => handleInputChange('professionalRegistration', e.target.value),\n              placeholder: \"Ex: 12345/SP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), errors.professionalRegistration && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: errors.professionalRegistration\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 51\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"phone\",\n              className: \"form-label\",\n              children: \"Telefone *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"phone\",\n              className: `form-input ${errors.phone ? 'error' : ''}`,\n              value: formData.phone,\n              onChange: e => handleInputChange('phone', formatPhone(e.target.value)),\n              placeholder: \"(00) 00000-0000\",\n              maxLength: 15\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), errors.phone && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: errors.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              className: \"form-label\",\n              children: \"E-mail *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              className: `form-input ${errors.email ? 'error' : ''}`,\n              value: formData.email,\n              onChange: e => handleInputChange('email', e.target.value),\n              placeholder: \"profissional@email.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"toggle-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"toggle\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: formData.isActive,\n                  onChange: e => handleInputChange('isActive', e.target.checked)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"toggle-slider\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"toggle-label\",\n                children: formData.isActive ? 'Ativo' : 'Inativo'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"section-title\",\n          children: \"Locais de Atua\\xE7\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkbox-grid\",\n          children: availableLocations.map(location => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkbox-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: formData.locations.includes(location.id),\n              onChange: () => handleLocationToggle(location.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"checkbox-label\",\n              children: location.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this)]\n          }, location.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), errors.locations && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-message\",\n          children: errors.locations\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"section-title\",\n          children: \"Grupos e Especialidades\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkbox-grid\",\n          children: availableGroups.map(group => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkbox-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: formData.groups.includes(group.id),\n              onChange: () => handleGroupToggle(group.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"checkbox-label\",\n              children: group.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this)]\n          }, group.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-outline\",\n          onClick: onCancel,\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: professional ? 'Atualizar Profissional' : 'Cadastrar Profissional'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfessionalRegistration, \"T8FpFCMH/PCWFUz4Sk6K6gGPxfM=\");\n_c = ProfessionalRegistration;\nexport default ProfessionalRegistration;\nvar _c;\n$RefreshReg$(_c, \"ProfessionalRegistration\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ProfessionalRegistration","onSave","onCancel","professional","_s","_professional$isActiv","formData","setFormData","name","profession","professionalRegistration","email","phone","locations","groups","isActive","errors","setErrors","availableLocations","id","availableGroups","professions","handleInputChange","field","value","prev","undefined","handleLocationToggle","locationId","includes","filter","handleGroupToggle","groupId","validateForm","newErrors","trim","test","length","Object","keys","handleSubmit","e","preventDefault","formatPhone","numbers","replace","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","onChange","target","placeholder","map","prof","maxLength","checked","location","group","onClick","_c","$RefreshReg$"],"sources":["/Users/lucascantoni/Desktop/LifyEscalas/LifyEscalas/src/components/Registration/ProfessionalRegistration.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './ProfessionalRegistration.css';\n\ninterface ProfessionalRegistrationProps {\n  onSave: (professional: ProfessionalData) => void;\n  onCancel: () => void;\n  professional?: ProfessionalData;\n}\n\ninterface ProfessionalData {\n  id?: string;\n  name: string;\n  profession: string;\n  professionalRegistration: string;\n  email: string;\n  phone: string;\n  locations: string[];\n  groups: string[];\n  isActive: boolean;\n}\n\nconst ProfessionalRegistration: React.FC<ProfessionalRegistrationProps> = ({\n  onSave,\n  onCancel,\n  professional\n}) => {\n  const [formData, setFormData] = useState<ProfessionalData>({\n    name: professional?.name || '',\n    profession: professional?.profession || '',\n    professionalRegistration: professional?.professionalRegistration || '',\n    email: professional?.email || '',\n    phone: professional?.phone || '',\n    locations: professional?.locations || [],\n    groups: professional?.groups || [],\n    isActive: professional?.isActive ?? true\n  });\n\n  const [errors, setErrors] = useState<{\n    name?: string;\n    profession?: string;\n    professionalRegistration?: string;\n    email?: string;\n    phone?: string;\n    locations?: string;\n    groups?: string;\n  }>({});\n\n  // Dados mockados para demonstração\n  const availableLocations = [\n    { id: '1', name: 'Hospital 1° de Maio' },\n    { id: '2', name: 'Hospital Estadual Pedro Mendes' },\n    { id: '3', name: 'Hospital da 2ª Divisão' },\n    { id: '4', name: 'Pronto Atendimento Aeroporto CGH' },\n    { id: '5', name: 'UPA de Ilha Bela' }\n  ];\n\n  const availableGroups = [\n    { id: '1', name: 'Coordenação' },\n    { id: '2', name: 'Pediatria' },\n    { id: '3', name: 'Clínica Médica' },\n    { id: '4', name: 'UTI' },\n    { id: '5', name: 'Emergência' }\n  ];\n\n  const professions = [\n    'Médico(a)',\n    'Dentista',\n    'Enfermeiro(a)',\n    'Técnico(a) de Enfermagem',\n    'Fisioterapeuta',\n    'Psicólogo(a)',\n    'Outros'\n  ];\n\n  const handleInputChange = (field: keyof ProfessionalData, value: string | boolean | string[]) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n    \n    // Limpar erro quando o usuário começar a digitar\n    if (errors[field as keyof typeof errors]) {\n      setErrors(prev => ({\n        ...prev,\n        [field]: undefined\n      }));\n    }\n  };\n\n  const handleLocationToggle = (locationId: string) => {\n    setFormData(prev => ({\n      ...prev,\n      locations: prev.locations.includes(locationId)\n        ? prev.locations.filter(id => id !== locationId)\n        : [...prev.locations, locationId]\n    }));\n  };\n\n  const handleGroupToggle = (groupId: string) => {\n    setFormData(prev => ({\n      ...prev,\n      groups: prev.groups.includes(groupId)\n        ? prev.groups.filter(id => id !== groupId)\n        : [...prev.groups, groupId]\n    }));\n  };\n\n  const validateForm = (): boolean => {\n    const newErrors: Partial<ProfessionalData> = {};\n\n    if (!formData.name.trim()) {\n      newErrors.name = 'Nome do profissional é obrigatório';\n    }\n\n    if (!formData.profession.trim()) {\n      newErrors.profession = 'Profissão é obrigatória';\n    }\n\n    if (!formData.professionalRegistration.trim()) {\n      newErrors.professionalRegistration = 'Registro profissional é obrigatório';\n    }\n\n    if (!formData.email.trim()) {\n      newErrors.email = 'E-mail é obrigatório';\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\n      newErrors.email = 'E-mail inválido';\n    }\n\n    if (!formData.phone.trim()) {\n      newErrors.phone = 'Telefone é obrigatório';\n    }\n\n    if (formData.locations.length === 0) {\n      newErrors.locations = 'Selecione pelo menos um local';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (validateForm()) {\n      onSave(formData);\n    }\n  };\n\n  const formatPhone = (value: string) => {\n    const numbers = value.replace(/\\D/g, '');\n    if (numbers.length <= 10) {\n      return numbers.replace(/^(\\d{2})(\\d{4})(\\d{4})$/, '($1) $2-$3');\n    } else {\n      return numbers.replace(/^(\\d{2})(\\d{5})(\\d{4})$/, '($1) $2-$3');\n    }\n  };\n\n  return (\n    <div className=\"professional-registration\">\n      <div className=\"registration-header\">\n        <h1 className=\"registration-title\">\n          {professional ? 'Editar Profissional' : 'Cadastrar Novo Profissional'}\n        </h1>\n        <p className=\"registration-subtitle\">\n          {professional ? 'Atualize as informações do profissional' : 'Adicione um novo profissional ao sistema'}\n        </p>\n      </div>\n\n      <form onSubmit={handleSubmit} className=\"registration-form\">\n        <div className=\"form-section\">\n          <h3 className=\"section-title\">Informações Pessoais</h3>\n          \n          <div className=\"form-row\">\n            <div className=\"form-group\">\n              <label htmlFor=\"name\" className=\"form-label\">\n                Nome Completo *\n              </label>\n              <input\n                type=\"text\"\n                id=\"name\"\n                className={`form-input ${errors.name ? 'error' : ''}`}\n                value={formData.name}\n                onChange={(e) => handleInputChange('name', e.target.value)}\n                placeholder=\"Digite o nome completo\"\n              />\n              {errors.name && <span className=\"error-message\">{errors.name}</span>}\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"profession\" className=\"form-label\">\n                Profissão *\n              </label>\n              <select\n                id=\"profession\"\n                className={`form-input ${errors.profession ? 'error' : ''}`}\n                value={formData.profession}\n                onChange={(e) => handleInputChange('profession', e.target.value)}\n              >\n                <option value=\"\">Selecione a profissão</option>\n                {professions.map(prof => (\n                  <option key={prof} value={prof}>{prof}</option>\n                ))}\n              </select>\n              {errors.profession && <span className=\"error-message\">{errors.profession}</span>}\n            </div>\n          </div>\n\n          <div className=\"form-row\">\n            <div className=\"form-group\">\n              <label htmlFor=\"professionalRegistration\" className=\"form-label\">\n                Registro Profissional *\n              </label>\n              <input\n                type=\"text\"\n                id=\"professionalRegistration\"\n                className={`form-input ${errors.professionalRegistration ? 'error' : ''}`}\n                value={formData.professionalRegistration}\n                onChange={(e) => handleInputChange('professionalRegistration', e.target.value)}\n                placeholder=\"Ex: 12345/SP\"\n              />\n              {errors.professionalRegistration && <span className=\"error-message\">{errors.professionalRegistration}</span>}\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"phone\" className=\"form-label\">\n                Telefone *\n              </label>\n              <input\n                type=\"text\"\n                id=\"phone\"\n                className={`form-input ${errors.phone ? 'error' : ''}`}\n                value={formData.phone}\n                onChange={(e) => handleInputChange('phone', formatPhone(e.target.value))}\n                placeholder=\"(00) 00000-0000\"\n                maxLength={15}\n              />\n              {errors.phone && <span className=\"error-message\">{errors.phone}</span>}\n            </div>\n          </div>\n\n          <div className=\"form-row\">\n            <div className=\"form-group\">\n              <label htmlFor=\"email\" className=\"form-label\">\n                E-mail *\n              </label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                className={`form-input ${errors.email ? 'error' : ''}`}\n                value={formData.email}\n                onChange={(e) => handleInputChange('email', e.target.value)}\n                placeholder=\"profissional@email.com\"\n              />\n              {errors.email && <span className=\"error-message\">{errors.email}</span>}\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"form-label\">Status</label>\n              <div className=\"toggle-container\">\n                <label className=\"toggle\">\n                  <input\n                    type=\"checkbox\"\n                    checked={formData.isActive}\n                    onChange={(e) => handleInputChange('isActive', e.target.checked)}\n                  />\n                  <span className=\"toggle-slider\"></span>\n                </label>\n                <span className=\"toggle-label\">\n                  {formData.isActive ? 'Ativo' : 'Inativo'}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"form-section\">\n          <h3 className=\"section-title\">Locais de Atuação</h3>\n          <div className=\"checkbox-grid\">\n            {availableLocations.map(location => (\n              <label key={location.id} className=\"checkbox-item\">\n                <input\n                  type=\"checkbox\"\n                  checked={formData.locations.includes(location.id)}\n                  onChange={() => handleLocationToggle(location.id)}\n                />\n                <span className=\"checkbox-label\">{location.name}</span>\n              </label>\n            ))}\n          </div>\n          {errors.locations && <span className=\"error-message\">{errors.locations}</span>}\n        </div>\n\n        <div className=\"form-section\">\n          <h3 className=\"section-title\">Grupos e Especialidades</h3>\n          <div className=\"checkbox-grid\">\n            {availableGroups.map(group => (\n              <label key={group.id} className=\"checkbox-item\">\n                <input\n                  type=\"checkbox\"\n                  checked={formData.groups.includes(group.id)}\n                  onChange={() => handleGroupToggle(group.id)}\n                />\n                <span className=\"checkbox-label\">{group.name}</span>\n              </label>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"form-actions\">\n          <button type=\"button\" className=\"btn btn-outline\" onClick={onCancel}>\n            Cancelar\n          </button>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            {professional ? 'Atualizar Profissional' : 'Cadastrar Profissional'}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ProfessionalRegistration;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}